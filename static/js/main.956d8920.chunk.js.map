{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoApp/TodoApp.tsx","helpers/useLocalStorage.tsx","App.tsx","index.tsx"],"names":["StatusOfFilter","TodoItem","todo","deleteTodo","handleToggle","editingTitle","useState","isEditing","setIsEditing","title","editingValue","setEditingValue","inputRef","useRef","useEffect","current","focus","className","classNames","completed","editing","hidden","onDoubleClick","event","target","type","ref","value","onChange","onKeyDown","key","trim","id","onBlur","checked","aria-label","data-cy","onClick","TodoList","filteredTodos","setTodos","prevState","filter","map","TodoFilter","setFilter","to","selected","All","Active","Completed","TodoApp","initialValue","item","localStorage","getItem","JSON","parse","todos","arrOfTodos","setItem","stringify","useLocalStorage","setValue","notCompletedTogglers","completedTogglers","handleKeyDown","newTodo","preventDefault","Date","prevTodos","placeholder","length","isChecked","handleToggleAll","htmlFor","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.956d8920.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\n// eslint-disable-next-line no-shadow\nexport enum StatusOfFilter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\ntype Props = {\n  setFilter: React.Dispatch<React.SetStateAction<StatusOfFilter>>;\n  filter: StatusOfFilter;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ filter, setFilter }) => {\n  const handleAllClick = () => setFilter(StatusOfFilter.All);\n  const handleActiveClick = () => setFilter(StatusOfFilter.Active);\n  const handleCompletedClick = () => setFilter(StatusOfFilter.Completed);\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <Link\n          to=\"#/\"\n          className={classNames({ selected: filter === StatusOfFilter.All })}\n          onClick={handleAllClick}\n        >\n          All\n        </Link>\n      </li>\n\n      <li>\n        <Link\n          to=\"#/active\"\n          className={classNames({ selected: filter === StatusOfFilter.Active })}\n          onClick={handleActiveClick}\n        >\n          Active\n        </Link>\n      </li>\n\n      <li>\n        <Link\n          to=\"#/completed\"\n          className={classNames({\n            selected: filter === StatusOfFilter.Completed,\n          })}\n          onClick={handleCompletedClick}\n        >\n          Completed\n        </Link>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  deleteTodo: (id: number) => void;\n  handleToggle: (\n    event: React.ChangeEvent<HTMLInputElement>, id: number) => void;\n  editingTitle: (id: number, title: string) => void;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  deleteTodo,\n  handleToggle,\n  editingTitle,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingValue, setEditingValue] = useState(todo.title);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (isEditing && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isEditing]);\n\n  const onKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      if (editingValue.trim() === '') {\n        deleteTodo(todo.id);\n      } else {\n        editingTitle(todo.id, editingValue);\n        setIsEditing(false);\n      }\n    } else if (event.key === 'Escape') {\n      setIsEditing(false);\n      setEditingValue(todo.title);\n    }\n  };\n\n  const onBlur = () => {\n    if (editingValue.trim() === '') {\n      deleteTodo(todo.id);\n    } else {\n      editingTitle(todo.id, editingValue);\n      setIsEditing(false);\n    }\n  };\n\n  return (\n    <li\n      className={classNames({\n        completed: todo.completed,\n        editing: isEditing,\n      })}\n      hidden={false}\n      onDoubleClick={(event) => {\n        if (event.target !== inputRef.current) {\n          setIsEditing(true);\n        }\n      }}\n    >\n      { isEditing ? (\n        <input\n          type=\"text\"\n          ref={inputRef}\n          className=\"edit\"\n          value={editingValue}\n          onChange={(event) => {\n            setEditingValue(event.target.value);\n          }}\n          onKeyDown={(event) => onKeyDown(event)}\n          onBlur={onBlur}\n        />\n      ) : (\n        <div\n          className=\"view\"\n        >\n          <input\n            type=\"checkbox\"\n            ref={inputRef}\n            className=\"toggle\"\n            id={`${todo.id}`}\n            checked={todo.completed}\n            onChange={(event) => {\n              handleToggle(event, todo.id);\n            }}\n          />\n          {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n          <label>\n            {todo.title}\n          </label>\n          <button\n            aria-label=\"Delete todo\"\n            type=\"button\"\n            className=\"destroy\"\n            data-cy=\"deleteTodo\"\n            onClick={() => deleteTodo(todo.id)}\n          />\n        </div>\n      )}\n    </li>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  filteredTodos: Todo[];\n  setTodos: (arrOfTodos: (prevTodos: Todo[]) => Todo[]) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ filteredTodos, setTodos }) => {\n  const deleteTodo = (id: number) => {\n    setTodos((prevState: Todo[]) => {\n      return prevState.filter(todo => todo.id !== id);\n    });\n  };\n\n  const handleToggle = (event: React.ChangeEvent<HTMLInputElement>,\n    id: number) => {\n    setTodos((prevState: Todo[]) => {\n      return prevState.map(todo => {\n        const { checked } = event.target;\n\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: checked,\n          };\n        }\n\n        return todo;\n      });\n    });\n  };\n\n  const editingTitle = (id: number, title: string) => {\n    setTodos((prevState: Todo[]) => {\n      return prevState.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            title,\n          };\n        }\n\n        return todo;\n      });\n    });\n  };\n\n  return (\n    <ul className=\"todo-list\" data-cy=\"todoList\">\n      {filteredTodos.map(todo => (\n        <TodoItem\n          todo={todo}\n          deleteTodo={deleteTodo}\n          handleToggle={handleToggle}\n          editingTitle={editingTitle}\n          key={todo.id}\n        />\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoList } from '../TodoList';\nimport { TodoFilter, StatusOfFilter } from '../TodoFilter';\nimport { useLocalStorage } from '../../helpers/useLocalStorage';\n\nexport const TodoApp: React.FC = () => {\n  const [todos, setTodos] = useLocalStorage('todos', []);\n  const [value, setValue] = useState('');\n  const [filter, setFilter] = useState(StatusOfFilter.All);\n\n  const notCompletedTogglers = todos.filter(\n    todo => !todo.completed,\n  );\n\n  const completedTogglers = todos.filter(\n    todo => todo.completed,\n  );\n\n  const updatedTodos = (newTodo: Todo) => {\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n  };\n\n  const clearCompletedTodos = () => {\n    setTodos(prevTodos => prevTodos.filter(todo => !todo.completed));\n  };\n\n  const filteredTodos = todos.filter((todo) => {\n    switch (filter) {\n      case StatusOfFilter.Active:\n        return !todo.completed;\n      case StatusOfFilter.Completed:\n        return todo.completed;\n      default:\n        return todo;\n    }\n  });\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      if (event.target.value) {\n        updatedTodos({\n          id: +new Date(),\n          title: event.target.value,\n          completed: false,\n        });\n      }\n\n      setValue('');\n    }\n  };\n\n  const handleToggleAll = (checked: boolean) => {\n    const isChecked = checked;\n\n    setTodos(prevTodos => prevTodos.map(\n      todo => ({ ...todo, completed: isChecked }),\n    ));\n  };\n\n  return (\n    <div className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form>\n          <input\n            type=\"text\"\n            data-cy=\"createTodo\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={value}\n            onChange={(event) => setValue(event.target.value)}\n            onKeyDown={(event) => {\n              handleKeyDown(event);\n            }}\n          />\n        </form>\n      </header>\n\n      {todos.length > 0 && (\n        <>\n          <section className=\"main\">\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              data-cy=\"toggleAll\"\n              checked={notCompletedTogglers.length === 0}\n              onChange={(event) => handleToggleAll(event.target.checked)}\n            />\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n            <TodoList\n              filteredTodos={filteredTodos}\n              setTodos={setTodos}\n            />\n          </section>\n\n          <footer className=\"footer\">\n            <span className=\"todo-count\" data-cy=\"todosCounter\">\n              {notCompletedTogglers.length === 1 ? `${notCompletedTogglers.length} item left` : `${notCompletedTogglers.length} items left`}\n            </span>\n\n            <TodoFilter filter={filter} setFilter={setFilter} />\n\n            {completedTogglers.length > 0 && (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                onClick={clearCompletedTodos}\n              >\n                Clear completed\n              </button>\n            )}\n          </footer>\n        </>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Todo } from '../types/Todo';\n\nexport const useLocalStorage = (key: string, initialValue: Todo[]):\n[Todo[], (arrOfTodos: (prevTodos: Todo[]) => Todo[]) => void] => {\n  const [todos, setTodos] = useState<Todo[]>(() => {\n    try {\n      const item = localStorage.getItem(key);\n\n      return item !== null ? JSON.parse(item) : initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const save = (arrOfTodos: (prevTodos: Todo[]) => Todo[]) => {\n    setTodos(arrOfTodos);\n    localStorage.setItem(key, JSON.stringify(arrOfTodos));\n  };\n\n  return [todos, save];\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport { TodoApp } from './components/TodoApp';\n\nexport const App: React.FC = () => {\n  return (\n    <TodoApp />\n  );\n};\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}